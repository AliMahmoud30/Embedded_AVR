
Stepper_Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000013e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000013e  000001b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000001b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000880  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  00000908  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000057d  00000000  00000000  00000988  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000118  00000000  00000000  00000f05  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003c4  00000000  00000000  0000101d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000013e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000127  00000000  00000000  00001408  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e3       	ldi	r30, 0x3E	; 62
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 9d 00 	jmp	0x13a	; 0x13a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include <util/delay.h>

#include "std_macros.h"
int main(void)
{
	DDRD=0x0F;
  92:	8f e0       	ldi	r24, 0x0F	; 15
  94:	81 bb       	out	0x11, r24	; 17
    while(1)
    {
		SET_BIT(PORTD,0);
  96:	90 9a       	sbi	0x12, 0	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  98:	8f ef       	ldi	r24, 0xFF	; 255
  9a:	99 e6       	ldi	r25, 0x69	; 105
  9c:	a8 e1       	ldi	r26, 0x18	; 24
  9e:	81 50       	subi	r24, 0x01	; 1
  a0:	90 40       	sbci	r25, 0x00	; 0
  a2:	a0 40       	sbci	r26, 0x00	; 0
  a4:	e1 f7       	brne	.-8      	; 0x9e <main+0xc>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <main+0x16>
  a8:	00 00       	nop
		_delay_ms(1000);
		
		SET_BIT(PORTD,1);
  aa:	91 9a       	sbi	0x12, 1	; 18
  ac:	8f ef       	ldi	r24, 0xFF	; 255
  ae:	99 e6       	ldi	r25, 0x69	; 105
  b0:	a8 e1       	ldi	r26, 0x18	; 24
  b2:	81 50       	subi	r24, 0x01	; 1
  b4:	90 40       	sbci	r25, 0x00	; 0
  b6:	a0 40       	sbci	r26, 0x00	; 0
  b8:	e1 f7       	brne	.-8      	; 0xb2 <main+0x20>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x2a>
  bc:	00 00       	nop
		_delay_ms(1000);
		
		CLR_BIT(PORTD,0);
  be:	90 98       	cbi	0x12, 0	; 18
  c0:	8f ef       	ldi	r24, 0xFF	; 255
  c2:	99 e6       	ldi	r25, 0x69	; 105
  c4:	a8 e1       	ldi	r26, 0x18	; 24
  c6:	81 50       	subi	r24, 0x01	; 1
  c8:	90 40       	sbci	r25, 0x00	; 0
  ca:	a0 40       	sbci	r26, 0x00	; 0
  cc:	e1 f7       	brne	.-8      	; 0xc6 <main+0x34>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <main+0x3e>
  d0:	00 00       	nop
		_delay_ms(1000);
		
		SET_BIT(PORTD,2);
  d2:	92 9a       	sbi	0x12, 2	; 18
  d4:	8f ef       	ldi	r24, 0xFF	; 255
  d6:	99 e6       	ldi	r25, 0x69	; 105
  d8:	a8 e1       	ldi	r26, 0x18	; 24
  da:	81 50       	subi	r24, 0x01	; 1
  dc:	90 40       	sbci	r25, 0x00	; 0
  de:	a0 40       	sbci	r26, 0x00	; 0
  e0:	e1 f7       	brne	.-8      	; 0xda <main+0x48>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <main+0x52>
  e4:	00 00       	nop
        _delay_ms(1000);
		
		CLR_BIT(PORTD,1);
  e6:	91 98       	cbi	0x12, 1	; 18
  e8:	8f ef       	ldi	r24, 0xFF	; 255
  ea:	99 e6       	ldi	r25, 0x69	; 105
  ec:	a8 e1       	ldi	r26, 0x18	; 24
  ee:	81 50       	subi	r24, 0x01	; 1
  f0:	90 40       	sbci	r25, 0x00	; 0
  f2:	a0 40       	sbci	r26, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x5c>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x66>
  f8:	00 00       	nop
		_delay_ms(1000);
	
		SET_BIT(PORTD,3);
  fa:	93 9a       	sbi	0x12, 3	; 18
  fc:	8f ef       	ldi	r24, 0xFF	; 255
  fe:	99 e6       	ldi	r25, 0x69	; 105
 100:	a8 e1       	ldi	r26, 0x18	; 24
 102:	81 50       	subi	r24, 0x01	; 1
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	a0 40       	sbci	r26, 0x00	; 0
 108:	e1 f7       	brne	.-8      	; 0x102 <main+0x70>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <main+0x7a>
 10c:	00 00       	nop
		_delay_ms(1000);
		
		CLR_BIT(PORTD,2);
 10e:	92 98       	cbi	0x12, 2	; 18
 110:	8f ef       	ldi	r24, 0xFF	; 255
 112:	99 e6       	ldi	r25, 0x69	; 105
 114:	a8 e1       	ldi	r26, 0x18	; 24
 116:	81 50       	subi	r24, 0x01	; 1
 118:	90 40       	sbci	r25, 0x00	; 0
 11a:	a0 40       	sbci	r26, 0x00	; 0
 11c:	e1 f7       	brne	.-8      	; 0x116 <main+0x84>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <main+0x8e>
 120:	00 00       	nop
		_delay_ms(1000);
		
		SET_BIT(PORTD,0);
 122:	90 9a       	sbi	0x12, 0	; 18
 124:	8f ef       	ldi	r24, 0xFF	; 255
 126:	99 e6       	ldi	r25, 0x69	; 105
 128:	a8 e1       	ldi	r26, 0x18	; 24
 12a:	81 50       	subi	r24, 0x01	; 1
 12c:	90 40       	sbci	r25, 0x00	; 0
 12e:	a0 40       	sbci	r26, 0x00	; 0
 130:	e1 f7       	brne	.-8      	; 0x12a <main+0x98>
 132:	00 c0       	rjmp	.+0      	; 0x134 <main+0xa2>
 134:	00 00       	nop
		_delay_ms(1000);
		
		CLR_BIT(PORTD,3);
 136:	93 98       	cbi	0x12, 3	; 18
 138:	ae cf       	rjmp	.-164    	; 0x96 <main+0x4>

0000013a <_exit>:
 13a:	f8 94       	cli

0000013c <__stop_program>:
 13c:	ff cf       	rjmp	.-2      	; 0x13c <__stop_program>
